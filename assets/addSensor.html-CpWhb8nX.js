import{_ as a,o as n,c as s,f as t}from"./app-BHtLCESr.js";const e="/assets/images/other/ros/addSensor/connect.png",p="/assets/images/other/ros/addSensor/result.png",o={},l=t('<h1 id="ros添加传感器-以激光雷达为例" tabindex="-1"><a class="header-anchor" href="#ros添加传感器-以激光雷达为例"><span>ros添加传感器（以激光雷达为例）</span></a></h1><h2 id="硬件准备" tabindex="-1"><a class="header-anchor" href="#硬件准备"><span><strong>硬件准备</strong></span></a></h2><h3 id="雷达连接上位机" tabindex="-1"><a class="header-anchor" href="#雷达连接上位机"><span><strong>雷达连接上位机</strong></span></a></h3><figure><img src="'+e+`" alt="摄像头配置" tabindex="0" loading="lazy"><figcaption>摄像头配置</figcaption></figure><h3 id="确认当前的-usb-转串口终端并修改权限" tabindex="-1"><a class="header-anchor" href="#确认当前的-usb-转串口终端并修改权限"><span><strong>确认当前的 USB 转串口终端并修改权限</strong></span></a></h3><p>USB查看命令:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ll /dev/ttyUSB*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>授权(将当前用户添加进dialout组，与arduino类似):</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> dialout <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>$USER为当前用户变量</p><p>重启使配置生效</p><h2 id="软件安装" tabindex="-1"><a class="header-anchor" href="#软件安装"><span><strong>软件安装</strong></span></a></h2><p>进入工作空间的src目录，下载相关雷达驱动包，下载命令如下:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https:*//github.com/slamtec/rplidar_ros*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回工作空间，调用catkin_make编译，并source ./devel/setup.bash，为端口设置别名(将端口 ttyUSBX 映射到 rplidar):</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> src/rplidar_ros/scripts/

./create_udev_rules.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动并测试" tabindex="-1"><a class="header-anchor" href="#启动并测试"><span><strong>启动并测试</strong></span></a></h2><h3 id="rplidar-launch文件准备" tabindex="-1"><a class="header-anchor" href="#rplidar-launch文件准备"><span><strong>rplidar.launch文件准备</strong></span></a></h3><p>首先确认端口,编辑 rplidar.launch 文件</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rplidarNode<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rplidar_ros<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rplidarNode<span class="token punctuation">&quot;</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serial_port<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>string<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/dev/rplidar<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serial_baudrate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>115200<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
		<span class="token comment">&lt;!-- A1/A2 --&gt;</span>
		<span class="token comment">&lt;!-- param name=&quot;serial_baudrate&quot; type=&quot;int&quot; value=&quot;256000&quot; --&gt;</span>
		<span class="token comment">&lt;!-- A3 --&gt;</span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>frame_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>string<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>laser<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inverted<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bool<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>angle_compensate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bool<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&lt;node&gt;:定义ROS节点</p><p>· name=&quot;rplidarNode&quot;：指定节点的名称为“rplidarNode”。</p><p>· pkg=&quot;rplidar_ros&quot;：指明该节点所属的软件包是“rplidar_ros”，这是RPLIDAR在ROS中的驱动包。</p><p>· type=&quot;rplidarNode&quot;：指定了节点的类型，即执行的可执行文件名为“rplidarNode”。</p><p>· output=&quot;screen&quot;：表示该节点的标准输出（stdout）和标准错误（stderr）将被重定向到屏幕，便于在终端查看日志信息。</p><p>&lt;param&gt;:标签用于设置节点的参数</p><p>· serial_port=&quot;/dev/rplidar&quot;：配置了RPLIDAR与计算机通信的串口名称。&quot;/dev/rplidar&quot;，这通常是Linux系统下RPLIDAR连接的默认串口号，需根据实际连接情况调整。</p><p>· serial_baudrate=&quot;115200&quot;：设置串口的波特率，即数据传输速率。这里设置为115200，适用于RPLIDAR A1和A2型号。注释掉的部分（<!--A3 -->）指示如果使用RPLIDAR A3型号，可能需要将波特率改为256000。</p><p>· frame_id=&quot;laser&quot;：定义了发布的扫描数据的坐标系ID，默认为&quot;laser&quot;。这个ID在ROS的TF（Transform）树中用来标识雷达数据的参考坐标系。</p><p>· inverted=&quot;false&quot;：决定是否对扫描数据进行反转</p><p>· angle_compensate=&quot;true&quot;：用于控制是否开启角度补偿功能</p><h3 id="终端中执行-launch-文件" tabindex="-1"><a class="header-anchor" href="#终端中执行-launch-文件"><span><strong>终端中执行 launch 文件</strong></span></a></h3><p>终端工作空间下输入命令:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>roslaunch rplidar_ros rplidar.launch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果无异常，雷达开始旋转</p><h3 id="rviz中订阅雷达相关消息" tabindex="-1"><a class="header-anchor" href="#rviz中订阅雷达相关消息"><span><strong>rviz中订阅雷达相关消息</strong></span></a></h3><p>启动 rviz，添加 LaserScan 插件：</p><figure><img src="`+p+'" alt="雷达显示" tabindex="0" loading="lazy"><figcaption>雷达显示</figcaption></figure><p>注意: Fixed Frame 设置需要参考 rplidar.launch 中设置的 frame_id，Topic 一般设置为 /scan，Size 可以自由调整。</p>',39),c=[l];function r(u,i){return n(),s("div",null,c)}const k=a(o,[["render",r],["__file","addSensor.html.vue"]]),m=JSON.parse('{"path":"/posts/other/ros/addSensor.html","title":"ros添加传感器（以激光雷达为例）","lang":"zh-CN","frontmatter":{"icon":"radar","date":"2024-06-16T00:00:00.000Z","category":["ros"],"description":"ros添加传感器（以激光雷达为例） 硬件准备 雷达连接上位机 摄像头配置摄像头配置 确认当前的 USB 转串口终端并修改权限 USB查看命令: 授权(将当前用户添加进dialout组，与arduino类似): $USER为当前用户变量 重启使配置生效 软件安装 进入工作空间的src目录，下载相关雷达驱动包，下载命令如下: 返回工作空间，调用catkin...","head":[["meta",{"property":"og:url","content":"https://blog.zwymw.top/posts/other/ros/addSensor.html"}],["meta",{"property":"og:site_name","content":"荒芜"}],["meta",{"property":"og:title","content":"ros添加传感器（以激光雷达为例）"}],["meta",{"property":"og:description","content":"ros添加传感器（以激光雷达为例） 硬件准备 雷达连接上位机 摄像头配置摄像头配置 确认当前的 USB 转串口终端并修改权限 USB查看命令: 授权(将当前用户添加进dialout组，与arduino类似): $USER为当前用户变量 重启使配置生效 软件安装 进入工作空间的src目录，下载相关雷达驱动包，下载命令如下: 返回工作空间，调用catkin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.zwymw.top/assets/images/other/ros/addSensor/connect.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-25T08:12:00.000Z"}],["meta",{"property":"article:author","content":"荒芜"}],["meta",{"property":"article:published_time","content":"2024-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-25T08:12:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ros添加传感器（以激光雷达为例）\\",\\"image\\":[\\"https://blog.zwymw.top/assets/images/other/ros/addSensor/connect.png\\",\\"https://blog.zwymw.top/assets/images/other/ros/addSensor/result.png\\"],\\"datePublished\\":\\"2024-06-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-25T08:12:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"荒芜\\",\\"url\\":\\"https://blog.zwymw.top\\",\\"email\\":\\"2484068670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"硬件准备","slug":"硬件准备","link":"#硬件准备","children":[{"level":3,"title":"雷达连接上位机","slug":"雷达连接上位机","link":"#雷达连接上位机","children":[]},{"level":3,"title":"确认当前的 USB 转串口终端并修改权限","slug":"确认当前的-usb-转串口终端并修改权限","link":"#确认当前的-usb-转串口终端并修改权限","children":[]}]},{"level":2,"title":"软件安装","slug":"软件安装","link":"#软件安装","children":[]},{"level":2,"title":"启动并测试","slug":"启动并测试","link":"#启动并测试","children":[{"level":3,"title":"rplidar.launch文件准备","slug":"rplidar-launch文件准备","link":"#rplidar-launch文件准备","children":[]},{"level":3,"title":"终端中执行 launch 文件","slug":"终端中执行-launch-文件","link":"#终端中执行-launch-文件","children":[]},{"level":3,"title":"rviz中订阅雷达相关消息","slug":"rviz中订阅雷达相关消息","link":"#rviz中订阅雷达相关消息","children":[]}]}],"git":{"createdTime":1718526569000,"updatedTime":1719303120000,"contributors":[{"name":"荒芜","email":"2484068670@qq.com","commits":3}]},"readingTime":{"minutes":2.11,"words":633},"filePathRelative":"posts/other/ros/addSensor.md","localizedDate":"2024年6月16日","excerpt":"\\n<h2><strong>硬件准备</strong></h2>\\n<h3><strong>雷达连接上位机</strong></h3>\\n<figure><img src=\\"/assets/images/other/ros/addSensor/connect.png\\" alt=\\"摄像头配置\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>摄像头配置</figcaption></figure>\\n<h3><strong>确认当前的 USB 转串口终端并修改权限</strong></h3>\\n<p>USB查看命令:</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>ll /dev/ttyUSB*\\n</code></pre></div>","autoDesc":true}');export{k as comp,m as data};

import{_ as e,r as p,o,c,a as n,b as s,d as i,e as a}from"./app-BR0XYLRb.js";const l="/assets/images/code/end/java/SpringBootWebSocket/msedge_if1fAl6ZP5.png",u="/assets/images/code/end/java/SpringBootWebSocket/msedge_a7mdu8MsE7.png",r="/assets/images/code/end/java/SpringBootWebSocket/msedge_jrJ96puBhx.png",k="/assets/images/code/end/java/SpringBootWebSocket/idea64_DCElSo3z1l.png",d={},v=a(`<h1 id="springboot集成websocket并测试使用" tabindex="-1"><a class="header-anchor" href="#springboot集成websocket并测试使用"><span>SpringBoot集成websocket并测试使用</span></a></h1><h2 id="集成websocket" tabindex="-1"><a class="header-anchor" href="#集成websocket"><span>集成websocket</span></a></h2><p>引入依赖</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">org.springframework.boot</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">spring-boot-starter-websocket</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建配置文件<code>WebSocketConfig</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>socket<span class="token punctuation">.</span>server<span class="token punctuation">.</span>standard<span class="token punctuation">.</span>ServerEndpointExporter<span class="token punctuation">;</span>

@Configuration
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketConfig</span> <span class="token punctuation">{</span>
    @Bean
    <span class="token keyword">public</span> ServerEndpointExporter <span class="token function">serverEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建<code>WebSocketService</code></p><p>使用@Slf4j、log.info需要在pom.xml添加</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">org.projectlombok</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">lombok</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WebSocketService</code> ：</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span>PathParam<span class="token punctuation">;</span>
<span class="token keyword">import</span> javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span>ServerEndpoint<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ConcurrentHashMap<span class="token punctuation">;</span>

@<span class="token function">ServerEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;/websocket/{userId}&quot;</span><span class="token punctuation">)</span>
@Component
@Slf4j
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketService</span> <span class="token punctuation">{</span>

    <span class="token comment">/**
     * 静态变量，用来记录当前在线连接数。应该把它设计成线程安全的。
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> int onlineCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * concurrent包的线程安全Set，用来存放每个客户端对应的MyWebSocket对象。
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> ConcurrentHashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> WebSocketService<span class="token operator">&gt;</span> webSocketMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">();
    /**
     * 与某个客户端的连接会话，需要通过它来给客户端发送数据
     */
    private Session session;
    /**
     * 接收userId
     */
    private String userId = &quot;&quot;;

    /**
     * 连接建立成功调用的方法
     */
    @OnOpen
    public void onOpen(Session session, @PathParam(&quot;userId&quot;) String userId) </span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>session <span class="token operator">=</span> session<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">=</span> userId<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>webSocketMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webSocketMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            webSocketMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//加入set中</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            webSocketMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//加入set中</span>
            <span class="token function">addOnlineCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//在线数加1</span>
        <span class="token punctuation">}</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;用户:&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;连接,当前在线人数为:&quot;</span> <span class="token operator">+</span> <span class="token function">getOnlineCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;连接成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>IOException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;用户:&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;,网络异常!!!!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    /**
     * 连接关闭调用的方法
     */
    @OnClose
    public void onClose() </span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>webSocketMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            webSocketMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//从set中删除</span>
            <span class="token function">subOnlineCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;用户:&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;退出,当前在线人数为:&quot;</span> <span class="token operator">+</span> <span class="token function">getOnlineCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    /**
     * 收到客户端消息后调用的方法
     *
     * @param message 客户端发送过来的消息
     */
    @OnMessage
    public void onMessage(String message, Session session) </span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;用户:&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;,报文:&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    @OnMessage
    public void onMessage(byte[] byteBuffer, Session session) </span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;用户：&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;,字节集：&quot;</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    @OnError
    public void onError(Session session, Throwable error) </span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;用户:&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">+</span> <span class="token string">&quot;错误,原因:&quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    /**
     * 实现服务器主动推送
     */
    public void sendMessage(String message) throws IOException </span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">getBasicRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendText</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    /**
     * 发送自定义消息
     */
    public static void sendInfo(String message, @PathParam(&quot;userId&quot;) String userId) throws IOException </span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;发送消息到:&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> <span class="token string">&quot;，报文:&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        webSocketMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    public static synchronized int getOnlineCount() </span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> onlineCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    public static synchronized void addOnlineCount() </span><span class="token punctuation">{</span>
        WebSocketService<span class="token punctuation">.</span>onlineCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">

    public static synchronized void subOnlineCount() </span><span class="token punctuation">{</span>
        WebSocketService<span class="token punctuation">.</span>onlineCount<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">
}
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建<code>DemoController</code></p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>ResponseEntity<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span>
<span class="token keyword">import</span> top<span class="token punctuation">.</span>zwymw<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service<span class="token punctuation">.</span>WebSocketService<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>

@RestController
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>

    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/push/{toUserId}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> ResponseEntity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">String</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"> pushToWeb(String message, @PathVariable String toUserId) throws IOException </span><span class="token punctuation">{</span>
        WebSocketService<span class="token punctuation">.</span><span class="token function">sendInfo</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>toUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ResponseEntity<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;MSG SEND SUCCESS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token plain-text">
}
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>启动<code>Application</code> 开始测试</p>`,15),m={href:"https://wstool.js.org/",target:"_blank",rel:"noopener noreferrer"},b=a('<figure><img src="'+l+`" alt="在线测试工具" tabindex="0" loading="lazy"><figcaption>在线测试工具</figcaption></figure><p>用户1连接地址</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token literal-property property">ws</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>websocket<span class="token operator">/</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>点击工具的开始连接</p><p>连接成功</p><p>输入内容，点击发送至服务端</p><figure><img src="`+u+`" alt="与服务端通信" tabindex="0" loading="lazy"><figcaption>与服务端通信</figcaption></figure><p>打开接口测试工具</p><div class="language-jsx line-numbers-mode" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>push<span class="token operator">/</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加参数message，发送请求</p><figure><img src="`+r+'" alt="发送请求" tabindex="0" loading="lazy"><figcaption>发送请求</figcaption></figure><p>查看日志</p><figure><img src="'+k+'" alt="后端日志" tabindex="0" loading="lazy"><figcaption>后端日志</figcaption></figure>',13);function g(w,S){const t=p("ExternalLinkIcon");return o(),c("div",null,[v,n("p",null,[s("这里使用"),n("a",m,[s("在线测试工具"),i(t)])]),b])}const x=e(d,[["render",g],["__file","SpringBootWebSocket.html.vue"]]),y=JSON.parse('{"path":"/posts/code/end/java/SpringBootWebSocket.html","title":"SpringBoot集成websocket并测试使用","lang":"zh-CN","frontmatter":{"icon":"websocket","date":"2024-06-11T00:00:00.000Z","category":["java"],"tag":["SpringBoot","websocket"],"description":"SpringBoot集成websocket并测试使用 集成websocket 引入依赖 创建配置文件WebSocketConfig 创建WebSocketService 使用@Slf4j、log.info需要在pom.xml添加 WebSocketService ： 创建DemoController 测试 启动Application 开始测试 这里使用...","head":[["meta",{"property":"og:url","content":"https://blog.zwymw.top/posts/code/end/java/SpringBootWebSocket.html"}],["meta",{"property":"og:site_name","content":"荒芜blog"}],["meta",{"property":"og:title","content":"SpringBoot集成websocket并测试使用"}],["meta",{"property":"og:description","content":"SpringBoot集成websocket并测试使用 集成websocket 引入依赖 创建配置文件WebSocketConfig 创建WebSocketService 使用@Slf4j、log.info需要在pom.xml添加 WebSocketService ： 创建DemoController 测试 启动Application 开始测试 这里使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.zwymw.top/assets/images/code/end/java/SpringBootWebSocket/msedge_if1fAl6ZP5.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-11T03:53:34.000Z"}],["meta",{"property":"article:author","content":"荒芜"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:tag","content":"websocket"}],["meta",{"property":"article:published_time","content":"2024-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-11T03:53:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot集成websocket并测试使用\\",\\"image\\":[\\"https://blog.zwymw.top/assets/images/code/end/java/SpringBootWebSocket/msedge_if1fAl6ZP5.png\\",\\"https://blog.zwymw.top/assets/images/code/end/java/SpringBootWebSocket/msedge_a7mdu8MsE7.png\\",\\"https://blog.zwymw.top/assets/images/code/end/java/SpringBootWebSocket/msedge_jrJ96puBhx.png\\",\\"https://blog.zwymw.top/assets/images/code/end/java/SpringBootWebSocket/idea64_DCElSo3z1l.png\\"],\\"datePublished\\":\\"2024-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-11T03:53:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"荒芜\\",\\"url\\":\\"https://blog.zwymw.top\\",\\"email\\":\\"2484068670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"集成websocket","slug":"集成websocket","link":"#集成websocket","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]}],"git":{"createdTime":1718078014000,"updatedTime":1718078014000,"contributors":[{"name":"荒芜","email":"2484068670@qq.com","commits":1}]},"readingTime":{"minutes":2.18,"words":655},"filePathRelative":"posts/code/end/java/SpringBootWebSocket.md","localizedDate":"2024年6月11日","excerpt":"\\n<h2>集成websocket</h2>\\n<p>引入依赖</p>\\n<div class=\\"language-jsx\\" data-ext=\\"jsx\\" data-title=\\"jsx\\"><pre class=\\"language-jsx\\"><code>        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n            </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">org.springframework.boot</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n            </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">spring-boot-starter-websocket</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n        </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}');export{x as comp,y as data};

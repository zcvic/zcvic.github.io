import{_ as e,o as s,c as a,f as t}from"./app-BeILnKaw.js";const n="/assets/images/other/ros/rosSetUdev/vmware_UXutHu2uyk.png",o="/assets/images/other/ros/rosSetUdev/vmware_XTmNJvWDLV.png",i="/assets/images/other/ros/rosSetUdev/vmware_Hh5Mo3zDPb.png",d="/assets/images/other/ros/rosSetUdev/vmware_wMHqP2Z6X9.png",r={},l=t(`<h1 id="ros学习-设置权限和串口别名规则" tabindex="-1"><a class="header-anchor" href="#ros学习-设置权限和串口别名规则"><span>ros学习-设置权限和串口别名规则</span></a></h1><p>使用多个传感器时，根据传感器插入的顺序，对应的串口名会发生变化，每次都手动调整配置文件的话会比较麻烦。可以通过规则文件设置别名来解决这个问题，同时可以设置自动赋予全部权限规则</p><h2 id="解决权限问题" tabindex="-1"><a class="header-anchor" href="#解决权限问题"><span>解决权限问题</span></a></h2><p>接入传感器，查看设备信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token function">ls</span> <span class="token parameter variable">-l</span> /dev/ttyUSB0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+n+`" alt="设备信息" tabindex="0" loading="lazy"><figcaption>设备信息</figcaption></figure><p>只有读写权限无执行权限</p><p>新建一个ttyUSB.sh脚本文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">touch</span> ttyUSB.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打开该文件，写入以下内容，保存</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;KERNEL==&quot;ttyUSB*&quot;, MODE:=&quot;0777&quot;, GROUP:=&quot;dialout&quot;&#39;</span> <span class="token operator">&gt;</span>/etc/udev/rules.d/ttyUSB.rules

<span class="token function">service</span> udev reload
<span class="token function">sleep</span> <span class="token number">2</span>
<span class="token function">service</span> udev restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给脚本文件授权</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> ttyUSB.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行脚本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sh</span> ttyUSB.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重加载和重启使规则生效</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> udevadm trigger
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>授权(将当前用户添加进dialout组):</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> dialout <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>$USER为当前用户变量</p><p>再次查看设备信息</p><figure><img src="`+o+`" alt="设备信息" tabindex="0" loading="lazy"><figcaption>设备信息</figcaption></figure><p>已经拥有执行权限</p><p>设置这个规则后，以后只要是ttyUSB设备，都会自动赋予777全部权限</p><h2 id="设置串口别名" tabindex="-1"><a class="header-anchor" href="#设置串口别名"><span>设置串口别名</span></a></h2><p>查看设备udev信息及属性</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>udevadm info --attribute-walk <span class="token parameter variable">--name</span><span class="token operator">=</span>/dev/ttyUSB0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>找到这几个属性</p><figure><img src="`+i+`" alt="设备属性" tabindex="0" loading="lazy"><figcaption>设备属性</figcaption></figure><p>新建一个wheeltec_udev.sh</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">touch</span> wheeltec_udev.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编写wheeltec_udev.sh脚本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span>  <span class="token string">&#39;KERNEL==&quot;ttyUSB*&quot;, ATTRS{idVendor}==&quot;10c4&quot;, ATTRS{idProduct}==&quot;ea60&quot;, ATTRS{serial}==&quot;0003&quot;, GROUP:=&quot;dialout&quot;, SYMLINK+=&quot;wheeltec_FDI_IMU_GNSS&quot;&#39;</span> <span class="token operator">&gt;</span>/etc/udev/rules.d/wheeltec_fdi_imu_gnss.rules

<span class="token function">service</span> udev reload
<span class="token function">sleep</span> <span class="token number">2</span>
<span class="token function">service</span> udev restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>KERNEL==&quot;ttyUSB*&quot;</code>: <code>KERNEL</code>是指设备的内核名称，<code>ttyUSB*</code>适用于所有以<code>ttyUSB</code>开头的设备，通常指的是通过USB连接的串行设备。 <code>ATTRS{idVendor}==&quot;10c4&quot;, ATTRS{idProduct}==&quot;ea60&quot;</code>: 精确匹配特定厂商和产品的设备 <code>ATTRS{serial}==&quot;0003&quot;</code>: 设备序列号(<code>serial</code>)为<code>0003</code> 区分同一型号但具有不同序列号的多个设备。 <code>GROUP:=&quot;dialout&quot;</code>:设备文件的所属组为<code>dialout</code>。属于<code>dialout</code>组的用户都将有权访问此设备 <code>SYMLINK+=&quot;wheeltec_FDI_IMU_GNSS&quot;</code>:设置别名<code>wheeltec_FDI_IMU_GNSS</code></p><p>给脚本文件授权</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> wheeltec_udev.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行脚本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sh</span> wheeltec_udev.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重加载和重启使规则生效</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> udevadm trigger
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="执行结果" tabindex="0" loading="lazy"><figcaption>执行结果</figcaption></figure><p>别名设置成功</p>',42),c=[l];function p(u,h){return s(),a("div",null,c)}const v=e(r,[["render",p],["__file","rosSetUdev.html.vue"]]),g=JSON.parse('{"path":"/posts/other/ros/rosSetUdev.html","title":"ros学习-设置权限和串口别名规则","lang":"zh-CN","frontmatter":{"icon":"host","date":"2024-06-22T00:00:00.000Z","category":["ros"],"description":"ros学习-设置权限和串口别名规则 使用多个传感器时，根据传感器插入的顺序，对应的串口名会发生变化，每次都手动调整配置文件的话会比较麻烦。可以通过规则文件设置别名来解决这个问题，同时可以设置自动赋予全部权限规则 解决权限问题 接入传感器，查看设备信息 设备信息设备信息 只有读写权限无执行权限 新建一个ttyUSB.sh脚本文件 打开该文件，写入以下内容...","head":[["meta",{"property":"og:url","content":"https://blog.zwymw.top/posts/other/ros/rosSetUdev.html"}],["meta",{"property":"og:site_name","content":"荒芜"}],["meta",{"property":"og:title","content":"ros学习-设置权限和串口别名规则"}],["meta",{"property":"og:description","content":"ros学习-设置权限和串口别名规则 使用多个传感器时，根据传感器插入的顺序，对应的串口名会发生变化，每次都手动调整配置文件的话会比较麻烦。可以通过规则文件设置别名来解决这个问题，同时可以设置自动赋予全部权限规则 解决权限问题 接入传感器，查看设备信息 设备信息设备信息 只有读写权限无执行权限 新建一个ttyUSB.sh脚本文件 打开该文件，写入以下内容..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.zwymw.top/assets/images/other/ros/rosSetUdev/vmware_UXutHu2uyk.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-30T03:50:37.000Z"}],["meta",{"property":"article:author","content":"荒芜"}],["meta",{"property":"article:published_time","content":"2024-06-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-30T03:50:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ros学习-设置权限和串口别名规则\\",\\"image\\":[\\"https://blog.zwymw.top/assets/images/other/ros/rosSetUdev/vmware_UXutHu2uyk.png\\",\\"https://blog.zwymw.top/assets/images/other/ros/rosSetUdev/vmware_XTmNJvWDLV.png\\",\\"https://blog.zwymw.top/assets/images/other/ros/rosSetUdev/vmware_Hh5Mo3zDPb.png\\",\\"https://blog.zwymw.top/assets/images/other/ros/rosSetUdev/vmware_wMHqP2Z6X9.png\\"],\\"datePublished\\":\\"2024-06-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-30T03:50:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"荒芜\\",\\"url\\":\\"https://blog.zwymw.top\\",\\"email\\":\\"2484068670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"解决权限问题","slug":"解决权限问题","link":"#解决权限问题","children":[]},{"level":2,"title":"设置串口别名","slug":"设置串口别名","link":"#设置串口别名","children":[]}],"git":{"createdTime":1719052329000,"updatedTime":1719719437000,"contributors":[{"name":"荒芜","email":"2484068670@qq.com","commits":3}]},"readingTime":{"minutes":1.79,"words":537},"filePathRelative":"posts/other/ros/rosSetUdev.md","localizedDate":"2024年6月22日","excerpt":"\\n<p>使用多个传感器时，根据传感器插入的顺序，对应的串口名会发生变化，每次都手动调整配置文件的话会比较麻烦。可以通过规则文件设置别名来解决这个问题，同时可以设置自动赋予全部权限规则</p>\\n<h2>解决权限问题</h2>\\n<p>接入传感器，查看设备信息</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code> <span class=\\"token function\\">ls</span> <span class=\\"token parameter variable\\">-l</span> /dev/ttyUSB0\\n</code></pre></div>","autoDesc":true}');export{v as comp,g as data};
